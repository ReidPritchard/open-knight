//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "evaluation")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub evaluation_id: i32,
    pub position_id: i32,
    #[sea_orm(column_type = "Double", nullable)]
    pub score: Option<f64>,
    pub r#type: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub best_line: Option<String>,
    pub depth: Option<i32>,
    pub engine_name: String,
    pub engine_version: String,
    pub created_at: Option<DateTimeUtc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::position::Entity",
        from = "Column::PositionId",
        to = "super::position::Column::PositionId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Position,
}

impl Related<super::position::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Position.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
