use crate::api::commands::AppState;
use crate::db::reset_database;
use crate::models;
use crate::utils::AppError;
use tauri::State;

/// Resets the database to its initial empty state
///
/// This command removes all data from the database.
/// Useful for testing and development.
#[tauri::command]
pub async fn empty_db(state: State<'_, AppState>) -> Result<(), AppError> {
    reset_database(&state.db).await?;
    Ok(())
}

/// Imports chess games from PGN format
///
/// Parses the provided PGN string and saves the games to the database.
/// Returns the number of successfully parsed games.
#[tauri::command]
pub async fn import_pgn_games(
    pgn: &str,
    state: State<'_, AppState>,
) -> Result<String, AppError> {
    let games = models::ChessGame::save_from_pgn(&state.db, pgn).await?;
    Ok(format!("Successfully parsed {} games", games.len()))
}

/// Function to download and import chess opening ECO database
///
/// Parameters:
/// - `state`: The state of the application
#[tauri::command]
pub async fn import_eco_database(
    state: State<'_, AppState>
) -> Result<(), AppError> {
    let _ = state;
    // TODO: Implement this
    todo!();

    // 1. Avoid re-downloading the database if it hasn't changed,
    // the data is already downloaded, or the database is already imported

    // 2. Determine the database version (the latest artifact generated by the github action)
    // unsure what the best way to do this is

    // 3. Download the database to a temporary file
    // ex. https://github.com/lichess-org/chess-openings/actions/runs/15195254221/artifacts/3180027701

    // 4. Wait for the download to complete, send events to the frontend to update the progress

    // 5. Extract the files from the downloaded archive (zip -> .tsv)

    // 6. Parse each .tsv file and import the data into the database
    // 6.1 Update existing records and dependencies

    // 7. Clean up the temporary files if the import was successful

    // 8. Send a success message to the frontend

    // 9. Save the database version to the database or a file?
}
